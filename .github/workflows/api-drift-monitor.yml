name: JustiFi API Drift Monitor

on:
  schedule:
    # Run every Monday at 9 AM UTC (weekly check)
    - cron: '0 9 * * 1'
  workflow_dispatch:
    # Allow manual triggering
  push:
    paths:
      # Run when our endpoint inventory changes
      - 'docs/endpoint-inventory.md'
      - 'docs/justifi-openapi.yaml'

jobs:
  api-drift-check:
    runs-on: ubuntu-latest
    name: Monitor JustiFi OpenAPI Spec Changes
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit for comparison
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install requests pyyaml deepdiff
      
      - name: Run API drift analysis
        id: drift-analysis
        run: |
          python scripts/ci-drift-check.py
      
      - name: Update stored spec if no critical changes
        if: steps.drift-analysis.outputs.CHANGES_DETECTED == 'false'
        run: |
          echo "üìù Updating stored OpenAPI spec..."
          cp justifi-openapi-latest.yaml docs/justifi-openapi.yaml
          
          # Check if there are any changes to commit
          if git diff --quiet docs/justifi-openapi.yaml; then
            echo "No changes to commit"
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add docs/justifi-openapi.yaml
            git commit -m "chore: update JustiFi OpenAPI spec (no breaking changes)"
            git push
          fi
      
      - name: Create GitHub Issue for Critical Changes
        if: steps.drift-analysis.outputs.CHANGES_DETECTED == 'true' && steps.drift-analysis.outputs.CRITICAL_CHANGES != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = `üö® JustiFi API Changes Detected - Review Required`;
            const issueBody = `
            # JustiFi API Drift Detection Alert
            
            **Date:** ${new Date().toISOString().split('T')[0]}
            **Critical Changes:** ${{ steps.drift-analysis.outputs.CRITICAL_CHANGES }}
            **Summary:** ${{ steps.drift-analysis.outputs.SUMMARY }}
            
            ## Detected Changes
            \`\`\`
            ${{ steps.drift-analysis.outputs.CHANGES_DETAIL }}
            \`\`\`
            
            ## Affected Tools
            Our JustiFi MCP server implements 10 tools across these endpoints:
            - **Payment Tools (5):** create_payment, retrieve_payment, list_payments, refund_payment, list_refunds
            - **Payment Method Tools (2):** create_payment_method, retrieve_payment_method  
            - **Payout Tools (2):** retrieve_payout, list_payouts
            - **Balance Tools (1):** list_balance_transactions
            
            ## Recommended Actions
            1. **Review Changes:** Compare the latest OpenAPI spec with our stored version
            2. **Test Compatibility:** Run \`make test\` to verify all 36 tests still pass
            3. **Update Tools:** Modify affected MCP tools if needed
            4. **Update Documentation:** Update endpoint inventory and tool descriptions
            5. **Update Stored Spec:** Replace \`docs/justifi-openapi.yaml\` with latest version
            
            ## Testing Checklist
            - [ ] All 36 tests pass (\`make test\`)
            - [ ] Real API integration still works (\`make dev\` + manual testing)
            - [ ] No new security vulnerabilities (\`make security\`)
            - [ ] Updated documentation reflects any changes
            
            ## Files to Review
            - \`docs/justifi-openapi.yaml\` - Update with latest spec
            - \`docs/endpoint-inventory.md\` - Update endpoint analysis
            - \`tools/justifi/\` - Update affected tool implementations
            - \`tests/\` - Add tests for any new functionality
            
            ---
            *This issue was automatically created by the API Drift Monitor workflow.*
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['api-drift', 'breaking-change', 'high-priority']
            });
      
      - name: Post success comment
        if: steps.drift-analysis.outputs.CHANGES_DETECTED == 'false'
        run: |
          echo "‚úÖ API Drift Monitor: No breaking changes detected"
          echo "üéØ All 10 JustiFi MCP tools remain fully compatible"
          echo "üìù Stored OpenAPI spec updated automatically" 