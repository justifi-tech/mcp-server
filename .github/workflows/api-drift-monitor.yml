name: JustiFi API Drift Monitor

on:
  schedule:
    # Run every Monday at 9 AM UTC (weekly check)
    - cron: '0 9 * * 1'
  workflow_dispatch:
    # Allow manual triggering
  push:
    paths:
      # Run when our endpoint inventory changes
      - 'docs/endpoint-inventory.md'
      - 'docs/justifi-openapi.yaml'

jobs:
  api-drift-check:
    runs-on: ubuntu-latest
    name: Monitor JustiFi OpenAPI Spec Changes
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit for comparison
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install requests pyyaml deepdiff
      
      - name: Run API drift analysis
        id: drift-analysis
        run: |
          python scripts/ci-drift-check.py
      
      - name: Check for actual spec changes
        id: spec-changes
        run: |
          echo "üìù Checking for actual OpenAPI spec changes..."
          cp justifi-openapi-latest.yaml docs/justifi-openapi.yaml.new
          
          # Check if there are any actual changes
          if git diff --quiet docs/justifi-openapi.yaml docs/justifi-openapi.yaml.new; then
            echo "No actual changes in spec"
            echo "HAS_SPEC_CHANGES=false" >> $GITHUB_OUTPUT
          else
            echo "Spec changes detected"
            echo "HAS_SPEC_CHANGES=true" >> $GITHUB_OUTPUT
          fi
          
          # Clean up temp file
          rm docs/justifi-openapi.yaml.new
      
      - name: Create Pull Request for Spec Update
        if: steps.spec-changes.outputs.HAS_SPEC_CHANGES == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update JustiFi OpenAPI spec"
          title: "üîÑ Update JustiFi OpenAPI Specification"
          body: |
            # JustiFi OpenAPI Spec Update
            
            **Auto-generated PR from API Drift Monitor**
            
            ## Changes Summary
            - Updated `docs/justifi-openapi.yaml` with latest JustiFi API specification
            - **Change Type:** ${{ steps.drift-analysis.outputs.CHANGES_DETECTED == 'true' && 'Breaking Changes Detected' || 'Non-breaking Updates' }}
            - **Critical Changes:** ${{ steps.drift-analysis.outputs.CRITICAL_CHANGES || '0' }}
            
            ## Analysis Results
            ```
            ${{ steps.drift-analysis.outputs.SUMMARY }}
            ```
            
            ## Before Merging
            - [ ] Review the spec changes carefully
            - [ ] Run `make test` to ensure all 36 tests pass
            - [ ] Test MCP server integration manually
            - [ ] Update any affected tool implementations
            - [ ] Update documentation if needed
            
            ---
            *This PR was automatically created by the API Drift Monitor workflow.*
          branch: api-drift-update-${{ github.run_number }}
          delete-branch: true
          labels: |
            api-drift
            automated-pr
            ${{ steps.drift-analysis.outputs.CHANGES_DETECTED == 'true' && 'breaking-change' || 'enhancement' }}
      
      - name: Create GitHub Issue for Changes
        if: steps.spec-changes.outputs.HAS_SPEC_CHANGES == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const changeType = '${{ steps.drift-analysis.outputs.CHANGES_DETECTED }}' === 'true' ? 'Breaking' : 'Non-breaking';
            const issueTitle = `üîÑ JustiFi API ${changeType} Changes Detected - Review Required`;
            const issueBody = `
            # JustiFi API Drift Detection Alert
            
            **Date:** ${new Date().toISOString().split('T')[0]}
            **Change Type:** ${changeType} Changes
            **Critical Changes:** ${{ steps.drift-analysis.outputs.CRITICAL_CHANGES || '0' }}
            **Summary:** ${{ steps.drift-analysis.outputs.SUMMARY }}
            
            ## Detected Changes
            \`\`\`
            ${{ steps.drift-analysis.outputs.CHANGES_DETAIL || 'See PR for detailed changes' }}
            \`\`\`
            
            ## Related Pull Request
            A PR has been automatically created to update the OpenAPI specification. Please review and merge it after validation.
            
            ## Affected Tools
            Our JustiFi MCP server implements 9 tools across these endpoints:
            - **Payment Tools (4):** create_payment, retrieve_payment, list_payments, refund_payment
            - **Payment Method Tools (2):** create_payment_method, retrieve_payment_method  
            - **Payout Tools (2):** retrieve_payout, list_payouts
            - **Balance Tools (1):** list_balance_transactions
            
            ## Recommended Actions
            1. **Review PR:** Check the automatically created PR for spec updates
            2. **Test Compatibility:** Run \`make test\` to verify all tests still pass
            3. **Update Tools:** Modify affected MCP tools if needed
            4. **Update Documentation:** Update endpoint inventory and tool descriptions
            5. **Merge PR:** After validation, merge the spec update PR
            
            ## Testing Checklist
            - [ ] All tests pass (\`make test\`)
            - [ ] Real API integration still works (\`make dev\` + manual testing)
            - [ ] No new security vulnerabilities (\`make security\`)
            - [ ] Updated documentation reflects any changes
            - [ ] PR reviewed and ready to merge
            
            ---
            *This issue was automatically created by the API Drift Monitor workflow.*
            `;
            
            const labels = ['api-drift'];
            if ('${{ steps.drift-analysis.outputs.CHANGES_DETECTED }}' === 'true') {
              labels.push('breaking-change', 'high-priority');
            } else {
              labels.push('enhancement', 'low-priority');
            }
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: labels
            });
      
      - name: Post success comment
        if: steps.drift-analysis.outputs.CHANGES_DETECTED == 'false'
        run: |
          echo "‚úÖ API Drift Monitor: No breaking changes detected"
          echo "üéØ All 10 JustiFi MCP tools remain fully compatible"
          echo "üìù Stored OpenAPI spec updated automatically" 