# Claude Issue to PR Creation Workflow
#
# PURPOSE: Creates new feature branches and PRs based on GitHub issues
#
# TRIGGERS:
#   - Comment "@claude implement" on any issue
#   - Comment "@claude create pr" on any issue
#   - Comment "@claude build [feature description]" on any issue
#   - Create a new issue with "@claude implement" in the description
#
# WHAT IT DOES:
#   - Creates a new feature branch from main
#   - Implements the feature/fix described in the issue
#   - Writes tests and documentation as needed
#   - Creates a pull request back to main
#   - Links the PR to the original issue
#
# EXAMPLES:
#   - Create issue: "Add user authentication" then comment "@claude implement"
#   - Comment on existing issue: "@claude create pr to add email validation"
#   - Create issue with: "Build a new dashboard component @claude implement"
#
# PERMISSIONS:
#   - Full write access to repository contents
#   - Create branches and pull requests
#   - Write issue and PR comments
#   - Link issues to PRs

name: Claude Issue to PR

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened, edited]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

jobs:
  create-implementation-pr:
    # Run on issues (not PRs) when requesting implementation
    if: |
      !github.event.issue.pull_request && 
      (contains(github.event.comment.body, '@claude implement') || 
       contains(github.event.comment.body, '@claude create pr') ||
       contains(github.event.comment.body, '@claude build') ||
       (github.event_name == 'issues' && contains(github.event.issue.body, '@claude implement')))

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Claude Issue Implementation
        uses: anthropics/claude-code-action@beta
        timeout-minutes: 15
        continue-on-error: false
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          allowed_tools: 'Bash'
          
          # Configure Claude for issue implementation
          custom_instructions: |
            You are implementing a feature for the JustiFi MCP Server project.
            
            üîß IMPORTANT: Read CLAUDE.md for project conventions and standards.
            
            Project Context:
            - This is a JustiFi MCP server with comprehensive payment tools
            - Uses OAuth2 Client-Credentials flow with token caching
            - All tests must pass (pytest + pytest-asyncio)
            - Use `uv` package manager, not pip
            - Run `make test` and `make lint` before completing

            Implementation Process:
            1. üìñ Read CLAUDE.md for project conventions
            2. üîç Analyze the issue requirements thoroughly
            3. üíª Implement the requested feature/fix
            4. ‚úÖ **VERIFY CHANGES APPLIED** using git diff and file reading
            5. üß™ Write appropriate tests
            6. üìö Update documentation if needed
            7. üîß Run `make test` and `make lint` to verify changes
            8. üìù Commit and push all changes to the branch
            9. üí¨ Provide GitHub comparison link for manual PR creation

            üö® CRITICAL VERIFICATION PROCESS:
            After making ANY file changes, you MUST:
            1. Use `git diff` to verify your changes were actually applied to files
            2. Use `git status` to see which files were modified  
            3. Use `Read` tool to verify file contents match your intended changes
            4. ONLY proceed to testing/committing if changes are confirmed applied
            5. If changes weren't applied, retry the file modifications

            Your PR should:
            - Use format: "[Type] Brief description (fixes #issue-number)"
            - Reference the original issue in the description
            - Include summary of changes made
            - Link to comparison view: https://github.com/justifi-tech/test-claude-actions/compare/main...BRANCH_NAME

            NEVER commit or push without first verifying that your file changes were actually applied!
