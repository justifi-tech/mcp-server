name: Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Run Python tests
        run: |
          pytest tests/ -v
      
      - name: Run linting
        run: |
          ruff check .
      
      - name: Test NPX wrapper
        run: |
          cd npx-wrapper
          node wrapper.js --version
          node wrapper.js --help
          # Test installation process (skip venv creation in CI)
          JUSTIFI_MCP_SKIP_INSTALL=true node install.js

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github
      
      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release

  publish-npm:
    needs: [test, release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Check if version changed
        id: version_check
        run: |
          cd npx-wrapper
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view @justifi/mcp-server version 2>/dev/null || echo "0.0.0")
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "Version changed from $PUBLISHED_VERSION to $CURRENT_VERSION"
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION"
          fi
      
      - name: Publish to NPM
        if: steps.version_check.outputs.should_publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd npx-wrapper
          npm publish
          echo "ðŸŽ‰ Successfully published @justifi/mcp-server to NPM!"