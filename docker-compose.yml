services:
  # Unified development container with all tools
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    env_file: .env
    working_dir: /app
    volumes:
      # Mount application code for live development (excludes cache dirs)
      - .:/app
      - /app/.venv
      - /app/.pytest_cache
      - /app/.mypy_cache
      - /app/.ruff_cache
      - /app/__pycache__
    # Keep container running for development
    tty: true
    stdin_open: true
    # Auto-restart on file changes (default behavior)
    # Override with: docker-compose run dev bash (for interactive shell)
    
  # MCP Server with auto-restart for development
  mcp-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    env_file: .env
    working_dir: /app
    volumes:
      # Mount application code for live development
      - .:/app
      - /app/.venv
      - /app/.pytest_cache
      - /app/.mypy_cache
      - /app/.ruff_cache
      - /app/__pycache__
    # Auto-restart MCP server on file changes (uses default CMD from Dockerfile)
    # command: ["watchmedo", "auto-restart", "--directory=/app", "--pattern=*.py", "--recursive", "--", "python", "main.py"]
    # For stdio MCP testing
    stdin_open: true

  # Production services (PostgreSQL, Redis, etc.)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mcp
      POSTGRES_USER: mcp_server
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcp_server -d mcp"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Optional: Redis Commander for Redis GUI
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis

  # Optional: pgAdmin for PostgreSQL GUI
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@justifi.local
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "8080:80"
    depends_on:
      - postgres

volumes:
  postgres_data:

networks:
  default:
    name: mcp_network 