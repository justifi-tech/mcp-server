name: NPX Wrapper Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
        python-version: [3.11, 3.12]
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        continue-on-error: true
        
      - name: Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          JUSTIFI_CLIENT_ID: test_client_id
          JUSTIFI_CLIENT_SECRET: test_client_secret
          JUSTIFI_ENVIRONMENT: sandbox
          
      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          JUSTIFI_CLIENT_ID: test_client_id
          JUSTIFI_CLIENT_SECRET: test_client_secret
          JUSTIFI_ENVIRONMENT: sandbox
          
      - name: Generate coverage report
        run: npm run test:coverage
        env:
          NODE_ENV: test
          JUSTIFI_CLIENT_ID: test_client_id
          JUSTIFI_CLIENT_SECRET: test_client_secret
          JUSTIFI_ENVIRONMENT: sandbox
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          
      - name: Test health check
        run: npm run health-check
        env:
          JUSTIFI_CLIENT_ID: test_client_id
          JUSTIFI_CLIENT_SECRET: test_client_secret
          JUSTIFI_ENVIRONMENT: sandbox
        continue-on-error: true
        
      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}-python${{ matrix.python-version }}
          path: |
            coverage/
            test-results.xml
            
  lint:
    name: Lint and format check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint JavaScript
        run: npm run lint
        continue-on-error: true
        
      - name: Check formatting
        run: npm run format:check
        continue-on-error: true
        
  security:
    name: Security audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit
        continue-on-error: true
        
      - name: Run vulnerability scan
        run: npm run security:scan
        continue-on-error: true
        
  performance:
    name: Performance tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: npm run test:performance
        env:
          NODE_ENV: test
          MONITOR_PERFORMANCE: true
        continue-on-error: true
        
  docs:
    name: Documentation check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate documentation
        run: npm run docs:generate
        continue-on-error: true
        
      - name: Check documentation
        run: npm run docs:check
        continue-on-error: true