[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "justifi-mcp-server"
version = "1.0.0"
description = "JustiFi MCP Server for payment processing integration"
authors = [{name = "MCP Development Team"}]
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    "mcp",
    "httpx",
    "pydantic",
    "python-dotenv",
    "langsmith",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio", 
    "pytest-cov",
    "respx",
    "black",
    "ruff",
    "mypy",
    "bandit",
    "watchdog",
    "pre-commit",
    "types-requests",
]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "respx",
]
api = [
    "requests",
    "pyyaml", 
    "deepdiff",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-mermaid2-plugin",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
# Same as Black.
line-length = 88
# Assume Python 3.11+.
target-version = "py311"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "D",  # pydocstyle
    "N",  # pep8-naming
    "S",  # bandit
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "S101",  # Use of assert detected (OK in tests)
    "T20",   # Print statements (OK for debugging)
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["tools", "tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start gradual, can make stricter later
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false  # Allow @traceable without types
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "respx.*",
    "mcp.*",
    "langsmith.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv", "build", "dist"]
skips = ["B101"]  # Skip assert_used test since we use asserts in tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"] 